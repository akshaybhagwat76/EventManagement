@model PagedList.IPagedList<MiidWeb.EndUser>
@using PagedList.Mvc;

@{
	ViewBag.Title = "Index";
	Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
	//Layout = null;
}

<style>
	<!--

	.glyphicon {
		cursor: pointer;
	}

	input,
	select {
		width: 100%;
		http: //localhost:58088/EndUsers#
	}
	-->
</style>
<div class="col-md-9">
	<div class="row">
		<div class="col-md-12">
			<div class="content-box-header">
				<div class="panel-title">All Tickets</div>

				<div class="panel-options">
					<div class="col-md-12 form-group">

						@Html.ActionLink("Create New", "Create", null, htmlAttributes: new { @class = "btn btn-primary" })
					</div>
				</div>
			</div>
			<div class="content-box-large box-with-header">
				<div class="row">
					@using (Html.BeginForm("Index", "EndUsers", FormMethod.Get))
					{<div class="col-md-12">Search by ID, Name, Surename or Email</div>
						<div class="col-md-4 form-group">
							<label>Search</label>
							@Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
						</div>
						<div class="col-md-4 form-group">
							<label></label>

							<input type="submit" value="Search" class="btn" />
						</div>



					}


				</div>
				<div class="panel-title">Customer Details</div>





				<div class="table-responsive" style="overflow-x:auto;">
					<table class="table table-striped table-bordered">
                        <tr>
                            <th colspan="3">Actions</th>
                            <th>
                                ID
                            </th>
                            <th>
                                Surname
                            </th>
                            <th>
                                Firstname
                            </th>


                            <th>
                                Cell
                            </th>
                            <th>
                                Email
                            </th>

                            <th>
                                IDNumber
                            </th>
                            <th>
                                Age
                            </th>




                            <th>
                                IsChildUser
                            </th>


                            <th>
                                Account Type Code
                            </th>

                            <th>
                                Status
                            </th>



                        </tr>

						@foreach (var item in Model)
						{
                    <tr>
                        <td>

                            @Html.ActionLink("View", "Details", new { id = item.ID })

                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.ID })

                        </td>
                        <td>

                            @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Surname)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Firstname)
                        </td>



                        <td>
                            @Html.DisplayFor(modelItem => item.Cell)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>




                        <td>
                            @Html.DisplayFor(modelItem => item.IDNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Age)
                        </td>




                        <td>
                            @Html.DisplayFor(modelItem => item.IsChildUser)
                        </td>

                        
                        <td>
                            @Html.DisplayFor(modelItem => item.AccountType.Code)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status.Code)
                        </td>
                       

                    </tr>
						}

					</table>
					<br />
					Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

					@Html.PagedListPager(Model, page => Url.Action("Index",
						new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
				</div>

			</div>
		</div>
	</div>
</div>

