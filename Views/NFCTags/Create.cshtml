@model MiidWeb.NFCTag

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>NFCTag</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "red" })
        <div class="form-group">
            @Html.LabelFor(model => model.TagNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TagNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TagNumber, "", new { @class = "red" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndUserID, "EndUserID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EndUserID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EndUserID, "", new { @class = "red" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActivationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ActivationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ActivationDate, "", new { @class = "red" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StatusID, "StatusID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StatusID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "red" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActivationCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ActivationCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ActivationCode, "", new { @class = "red" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TagPin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TagPin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TagPin, "", new { @class = "red" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

         <!--Start of Tawk.to Script-->
    <script type="text/javascript">
var Tawk_API=Tawk_API||{}, Tawk_LoadStart=new Date();
(function(){
var s1=document.createElement("script"),s0=document.getElementsByTagName("script")[0];
s1.async=true;
s1.src='https://embed.tawk.to/56c62790589e851628b84f1b/default';
s1.charset='UTF-8';
s1.setAttribute('crossorigin','*');
s0.parentNode.insertBefore(s1,s0);
})();
    </script>
    <!--End of Tawk.to Script-->
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


