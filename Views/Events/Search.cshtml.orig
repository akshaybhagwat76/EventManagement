@model MiidWeb.Models.EventSearchModel
@using MiidWeb.Controllers;
@using MiidWeb.Repositories;
@{
<<<<<<< working copy
    ViewBag.Title = "Search Results";
    Layout = TicketRepository.GetLayoutFile("Layout");
    int subDomainID = int.Parse(MiidWeb.Repositories.TicketRepository.GetSubdomainID());
    var events = Model.Events;
=======
	ViewBag.Title = "Search Results";
	Layout = TicketRepository.GetLayoutFile("Layout");
	int subDomainID = int.Parse(MiidWeb.Repositories.TicketRepository.GetSubdomainID());
>>>>>>> destination
}

<title>Search for online tickets on the Mi-id website</title>
<meta name="description" content="Seach and purchase tickets for events and festivals">


<style>
	.ellipsis {
		text-overflow: ellipsis;
		/* Required for text-overflow to do anything */
		white-space: nowrap;
		overflow: hidden;
	}
</style>



<div class="row" style="display:none">
	<div class="col-md-12">


		<div class="panel panel-primary">

			<div class="panel-heading">

				<h3 class="panel-title">Filter</h3>
				<span class="pull-right clickable"><i class="glyphicon glyphicon-plus"></i></span>
			</div>

			<div class="panel-body">

				<div class="span4">

					<form class="form-search">
						<div class="input-append">



						</div>
					</form>
				</div>
			</div>
		</div>

	</div>
</div>



<div class="container">

	<div class="row">




		<div class="col-md-12" style="background-color:#ffffff; padding-top:20px">

			<div class="col-md-10"><h1 class="small">Search Events:</h1></div>


			@using (Html.BeginForm("Search", "Events", FormMethod.Get))
			{<div class="form-group col-md-10">
					@Html.TextBoxFor(model => model.KeyWordSearchText, new { @class = "form-control input-lg", placeholder = "Enter event name" })
				</div>
				<div class="form-group col-md-2">

					<button name="demo-email" class="btn btn-outline btn-default btn-lg btn-block" id="demo-email" value="Search" onclick="submit();">
						<i class="fa fa-search" style="color:#ffffff; "></i>
					</button>
				</div>
			}
			<div class="form-group col-md-10">
				<a href="~/Events/Search">  Reset Search</a>
			</div>

		</div>

	</div>





</div>


@*<div class="row" style="display:none">
		<div class="col-md-12">


			<div class="panel panel-primary">

				<div class="panel-heading">

					<h3 class="panel-title">Filter</h3>
					<span class="pull-right clickable"><i class="glyphicon glyphicon-plus"></i></span>
				</div>

				<div class="panel-body">

					<div class="span4">

						<form class="form-search">
							<div class="input-append">
								<div class="form-group col-md-3">
									@Html.DropDownListFor(model => model.EventCategoryID, (SelectList)Model.EventCategoryList, "All categories", htmlAttributes: new { @class = "form-control phone" })
								</div>
								<div class="form-group col-md-3">
									@Html.DropDownListFor(model => model.EventMonth, (SelectList)Model.EventMonthList, "Every Month", htmlAttributes: new { @class = "form-control phone" })
								</div>
								<div class="form-group col-md-3">
									@Html.DropDownListFor(model => model.EventOrganiserID, (SelectList)Model.EventOrganiserList, "All Event Organisers", htmlAttributes: new { @class = "form-control phone" })
								</div>
								<div class="form-group col-md-3">
									@Html.DropDownListFor(model => model.RegionID, (SelectList)Model.RegionList, "All Regions", htmlAttributes: new { @class = "form-control phone" })
								</div>

							</div>
						</form>
					</div>
				</div>
			</div>

		</div>
	</div>*@







<div class="container  bg-grey">
	<!--open product row -->
	<div class="row">
		<div class="carousel-inner" role="listbox">
			<!--========= 1st slide =========-->
			<div class="item active">



				@foreach (var item in Model.Events.Where(x => x.SubdomainID == subDomainID).OrderByDescending(x => x.Event.StartDateTime))




				{


						<div class="col-xs-12 col-sm-6 col-md-4 team_columns_item_image">


							<div class="team_columns_item_caption" style="border-bottom:3px solid #d9d9d9">
								<div class="search-img">
									@if (item.EventBannerURL != null)

									{

										<a href="@Url.Action("PurchaseTickets", "Events", new { EventID = item.Event.ID }, null)"><img class="img-responsive" src="~/Uploads/@item.EventBannerURL" alt="@Html.DisplayFor(modelItem => item.Event.EventName)" /></a>





									}



									else

									{ <a href="@Url.Action("PurchaseTickets", "Events", new { EventID = item.Event.ID }, null)"><img class="img-responsive" src="~/Content/images/newimages/event-banner-holder.jpg" alt="Event image coming soon" /></a>





									}
								</div>


								@*  @Html.DisplayFor(modelItem => item.EventOrganiser.CompanyName)  *@

								@* @Html.DisplayFor(modelItem => item.EventCategory.Description)  *@

								<p class="ellipsis"><b> @Html.DisplayFor(modelItem => item.Event.EventName) </b></p>

								@* @Html.DisplayFor(modelItem => item.EventCategory.Description)</p> *@



								<p>
									@{DateTime start = (DateTime)item.Event.StartDateTime;} @start.ToString("HH:mm")

									@start.ToString("dd MMM yyyy")
								</p>

								@*  @Html.DisplayFor(modelItem => item.EventCategory.Description) *@

								@* <br>@Html.DisplayFor(modelItem => item.Event.Suburb) *@







								<a href="@Url.Action("PurchaseTickets", "Events", new { EventID = item.Event.ID }, null)"> <span class="btn btn-info btn-sm">View Event </span></a>





							</div>

						</div>






				}

















			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-md-8 col-md-offset-2">

			Page @(Model.Events.PageCount < Model.Events.PageNumber ? 0 : Model.Events.PageNumber)
			of @Model.Events.PageCount
			@if (Model.Events.HasPreviousPage)
			{
				@Html.ActionLink("<<", "Search", new { page = 1, EventCategoryID = Model.EventCategoryID, regionid = Model.RegionID, eventmonth = Model.EventMonth, KeyWordSearchText = Model.KeyWordSearchText, }, htmlAttributes: new { @class = "btn btn-primary btn block" })
				@Html.Raw(" ");
				@Html.ActionLink("< Prev", "Search", new { page = Model.Events.PageNumber - 1, EventCategoryID = Model.EventCategoryID, regionid = Model.RegionID, eventmonth = Model.EventMonth, KeyWordSearchText = Model.KeyWordSearchText }, htmlAttributes: new { @class = "btn btn-primary btn block" })
			}
			else
			{
				@:
				@Html.Raw(" ");
				@:
			}


			@if (Model.Events.HasNextPage)
			{
				@Html.ActionLink("Next >", "Search", new { page = Model.Events.PageNumber + 1, EventCategoryID = Model.EventCategoryID, regionid = Model.RegionID, eventmonth = Model.EventMonth, KeyWordSearchText = Model.KeyWordSearchText }, htmlAttributes: new { @class = "btn btn-primary btn block" })
				@Html.Raw(" ");
				@Html.ActionLink(">>", "Search", new { page = Model.Events.PageCount, EventCategoryID = Model.EventCategoryID, regionid = Model.RegionID, eventmonth = Model.EventMonth, KeyWordSearchText = Model.KeyWordSearchText }, htmlAttributes: new { @class = "btn btn-primary btn block" })
			}
			else
			{
				@:
				@Html.Raw(" ");
				@:
			}
		</div>
	</div>

</div>









