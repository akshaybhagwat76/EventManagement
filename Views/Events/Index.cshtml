
@model PagedList.IPagedList<MiidWeb.Event>

@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    //Layout = null;
}

<style>
    <!--

    .glyphicon {
        cursor: pointer;
    }

    input,
    select {
        width: 100%;
    }
    -->
</style>
<div class="col-md-9">
    <div class="row">
        <div class="col-md-12">
            <div class="content-box-header">
                <div class="panel-title"> All Events</div>


                <div class="panel-options">
                    <div class="col-md-12 form-group">

                        @Html.ActionLink("Create New", "Create", null, htmlAttributes: new { @class = "btn btn-primary" })
                    </div>
                </div>
            </div>

            <div class="content-box-large box-with-header">
                <div class="row">
                    @using (Html.BeginForm("Index", "Events", FormMethod.Get))
                    {<div class="col-md-12">Search by ID, Event Name, Organizer name, City or Event Category</div>
                        <div class="col-md-4 form-group">
                            <label>Search</label>
                            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })


                        </div>
                        <div class="col-md-4 form-group">
                            <label></label>

                            <input type="submit" value="Search" class="btn" />
                        </div>
                    }
                </div>

                <div class="table-responsive" style="overflow-x:auto;">
                    <table class="table table-striped table-bordered">
                        <tr>
                            <th>

                            </th>
                            <th>

                            </th>
                            <th>

                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].EventName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].ID)
                            </th>
                            <th>
                                Event Organiser
                            </th>
                            <th>
                                Event Organiser ID
                            </th>
                            <th>
                                Subdomain ID
                            </th>
                            <th>
                                City
                            </th>
                            <th>
                                Event Catory
                            </th>
                            <th>
                                Start Date
                            </th>

                            <th>
                                End Date
                            </th>


                            <th>
                                Has Seating Plan
                            </th>

                            <th>
                                Is Multi Day Event
                            </th>
                            <th>
                                Is Cashless
                            </th>



                        </tr>

                        @for (int i = 0; i < Model.Count; i++)
                        {
                            <tr>
                                <!--<td>
                                    <a href="@Url.Action("Details", "Events", new { id = @Model[i].ID }, null)">

                                     
                                    </a>

                                </td>	-->
                                <td>

                                    @Html.ActionLink("View", "Details", new { id = @Model[i].ID })

                                </td>
                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { id = @Model[i].ID })

                                </td>
                                <td>

                                    @Html.ActionLink("Delete", "Delete", new { id = @Model[i].ID })
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => @Model[i].EventName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => @Model[i].ID)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => @Model[i].EventOrganiser.CompanyName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => @Model[i].EventOrganiser.ID)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => @Model[i].SubdomainID)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => @Model[i].City)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => @Model[i].EventCategory.Description)
                                </td>
                                <td>
                                    @(((DateTime)(@Model[i].StartDateTime)).ToString("d MMM yyyy"))

                                </td>
                                <td>
                                    @(((DateTime)(@Model[i].EndDateTime)).ToString("d MMM yyyy"))

                                </td>


                                <td>
                                    @Html.DisplayFor(modelItem => @Model[i].HasSeatingPlan)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => @Model[i].IsMultiDayEvent)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => @Model[i].IsCashless)
                                </td>



                            </tr>
                        }
                    </table>
                    <br />
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

                    @Html.PagedListPager(Model, page => Url.Action("Index",
                        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
                </div>
            </div>
        </div>
    </div>
</div>
		</div>


